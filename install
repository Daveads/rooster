#!/bin/bash

function cleanup {
  rm -rf /tmp/git-rooster-ck
}

# Check if Cargo and Rust are installed, needed to build Rooster
which cargo && which rustc > /dev/null

# Install Cargo and Rust if needed
if [ "$?" != "0" ]; then
  curl -sSf https://static.rust-lang.org/rustup.sh | sh
fi

which cargo && which rustc > /dev/null

if [ "$?" != "0" ]; then
  echo 'Could not install Rust and Cargo. Aborting.' 1>&2
  exit 1
fi

git clone https://github.com/conradkleinespel/rooster.git /tmp/git-rooster-ck > /dev/null && cd /tmp/git-rooster-ck

if [ "$?" != "0" ]; then
  echo 'Could not download Rooster. Aborting.' 1>&2
  exit 1
fi

cargo build

if [ "$?" != "0" ]; then
  echo 'Could not build Rooster. Aborting.' 1>&2
  exit 1
fi

echo "Moving Rooster to /usr/local/bin."
sudo mv target/debug/rooster /usr/local/bin/rooster

if [ "$?" != "0" ]; then
  echo 'Could not put Rooster in /usr/local/bin. Aborting.' 1>&2
  exit 1
fi

echo '------------------------------'
echo 'All done!'
echo ''
echo 'You should now be able to run the "rooster" command. If not, you may'
echo 'want to check that /usr/local/bin is in your $PATH environment variable.'
echo ''
echo 'By default, Rooster will save passwords in the ~/.passwords.rooster file.'
echo 'You can override this by setting the $ROOSTER_FILE environment variable.'
echo 'For instance: export ROOSTER_FILE=$HOME/.passwords'
echo ''
echo 'For help, try: rooster --help'
echo 'Or visit: http://conradk.com/rooster'
echo ''
echo 'Rust and Cargo (tools needed to build Rooster) were installed. You can'
echo 'uninstall them by running: /usr/local/lib/rustlib/uninstall.sh. If you'
echo 'are unsure, do not uninstall them.'
echo '------------------------------'
